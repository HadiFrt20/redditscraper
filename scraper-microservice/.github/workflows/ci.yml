name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: scraper-microservice
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: scraper-microservice/requirements.txt

      - name: Install deps (Makefile)
        run: make deps

      - name: Run tests
        env:
          PYTHONPATH: .
        run: make test

      - name: Lint
        run: make lint

      - name: Format
        run: make format

      - name: Check
        run: make check

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: scraper-microservice
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Auth to Google Cloud with a service account key stored in GitHub Secrets
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      # (One-time) ensure the App Engine app exists in your project/region
      - name: Ensure App Engine app exists
        run: |
          gcloud app describe || gcloud app create --region="${{ secrets.GCP_APP_REGION }}"

      # Generate app.yaml on the fly with secrets (keeps secrets out of repo)
      - name: Create app.yaml for App Engine (standard Python 3.12)
        run: |
          cat > app.yaml << 'EOF'
          runtime: python312
          entrypoint: gunicorn -b :$PORT wsgi:app
          env_variables:
            REDDIT_CLIENT_ID: "${{ secrets.REDDIT_CLIENT_ID }}"
            REDDIT_CLIENT_SECRET: "${{ secrets.REDDIT_CLIENT_SECRET }}"
            REDDIT_USER_AGENT: "nba scrape agent"
          EOF

      - name: Deploy to App Engine
        run: gcloud app deploy app.yaml --quiet --project="${{ secrets.GCP_PROJECT }}"
